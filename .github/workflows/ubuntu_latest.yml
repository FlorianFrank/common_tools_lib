name: ubuntu_latest

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
        fail-fast: false
        matrix:
            config:
            - {
                name: "Ubuntu_Latest_GCC",
                os: ubuntu-latest,
                artifact: "ubuntu_gcc.7z",
                build_type: "Release",
                cc: "gcc",
                cxx: "g++",
                archiver: "7z a",
                generators: "Ninja"
              }

    steps:
    - uses: actions/setup-node@v2
      with:
          node-version: ${{ matrix.node }}

    - name: Checkout Repository and Submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}} -DPIL_ALL=1 -DPIL_UNIT_TESTING=1

    - name: Build Project
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{ matrix.config.build_type }} --target all

    - name: Run UnitTests
      working-directory: ${{runner.workspace}}/build
      run: GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: common_tools_lib_ubuntu_x64
        path: |
          ${{ runner.workspace }}/build/*.so
          ${{ runner.workspace }}/build/*.a
          ${{ runner.workspace }}/build/SOCKET_UNIT_TEST
          ${{runner.workspace}}/build/test-results/**/*.xml
